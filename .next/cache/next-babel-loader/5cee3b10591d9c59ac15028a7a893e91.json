{"ast":null,"code":"var _jsxFileName = \"/home/northboy/Documents/Nextjs-framer/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport { AnimatePresence } from \"framer-motion\";\nimport \"../styles.scss\";\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      router\n    } = this.props; // <Component/> returns the component it self\n    // pageProps returns the props you use to in that component. It can be any data\n    // router.route returns the route your component lives on. So in our case it will be '/' or '/products/[id]'\n    // exitBeforeEnter: AnimatePresence will only render one component at a time. The exiting component will finished its exit animation before the entering component is rendered\n\n    return __jsx(AnimatePresence, {\n      exitBeforeEnter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      key: router.route,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/northboy/Documents/Nextjs-framer/pages/_app.js"],"names":["React","App","AnimatePresence","MyApp","render","Component","pageProps","router","props","route"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAO,gBAAP;;AAEA,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACtBG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAmC,KAAKC,KAA9C,CADO,CAEP;AACA;AACA;AACA;;AACA,WACE,MAAC,eAAD;AAAiB,MAAA,eAAe,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeF,SAAf;AAA0B,MAAA,GAAG,EAAEC,MAAM,CAACE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAZqB;;AAexB,eAAeN,KAAf","sourcesContent":["import React from \"react\";\nimport App from \"next/app\";\nimport { AnimatePresence } from \"framer-motion\";\nimport \"../styles.scss\";\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, router } = this.props;\n    // <Component/> returns the component it self\n    // pageProps returns the props you use to in that component. It can be any data\n    // router.route returns the route your component lives on. So in our case it will be '/' or '/products/[id]'\n    // exitBeforeEnter: AnimatePresence will only render one component at a time. The exiting component will finished its exit animation before the entering component is rendered\n    return (\n      <AnimatePresence exitBeforeEnter>\n        <Component {...pageProps} key={router.route} />\n      </AnimatePresence>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}